# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
#     - run: npm test
    - name: Beanstalk Deploy
        # You may pin to the exact commit or the version.
        # uses: einaregilsson/beanstalk-deploy@6f594ded1b0a22c5e5aa1088e7c58dc5816c92ea
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          # AWS Access Key
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          # AWS Secret Key
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          # AWS Region
          region: us-east-1
          # Beanstalk application name
          application_name: song-nebula-backend
          # Beanstalk environment name. If empty a version will be created but not deployed anywhere.
          environment_name: Songnebulabackend-env
          # Version label for new Beanstalk version
          version_label: 1.0
          # Version description for the new Beanstalk version
          version_description: First deploy
#           # Zip file with the version to deploy. If skipped the action will deploy existing version.
#           deployment_package: # optional
#           # Whether the action should skip creating a new bucket and use the given one to upload the deployment package to instead. When omitted the actions will (try to) create a new one during deployment.
#           existing_bucket_name: # optional
#           # If set to "true" then the action will deploy an existing version with the given version_label if it already exists, but otherwise create the version and deploy it. If set to true for an action with no environment name it will upload a version if it does not exist already, but do nothing if the version already exists.
#           use_existing_version_if_available: # optional
#           # Whether the action should wait for the deployment to finish and log status messages during the wait. Default is "true". If set to "false" the action will start the deployment on Beanstalk and then exit.
#           wait_for_deployment: # optional
#           # How many seconds to wait for the environment to return to Green state after deployment is finished. Default is 30 seconds.
#           wait_for_environment_recovery: # optional
